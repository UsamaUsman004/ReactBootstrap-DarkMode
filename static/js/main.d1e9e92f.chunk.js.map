{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","JSON","parse","localStorage","getItem","dark","setMode","useEffect","setItem","stringify","className","Navbar","bg","variant","Container","Brand","href","Toggle","Collapse","Form","Check","type","id","label","onChange","checked","Row","Col","sm","Card","Img","src","Body","Title","Text","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA6DeA,MAxDf,WAEE,IAIA,EAAwBC,mBAHfC,KAAKC,MAAMC,aAAaC,QAAQ,WAAY,GAGrD,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,qBAAU,WACRJ,aAAaK,QAAQ,OAAQP,KAAKQ,UAAUJ,MAC3C,CAACA,IAKF,sBAAKK,UAAWL,EAAO,gBAAkB,MAAzC,UACE,cAACM,EAAA,EAAD,CAAQC,GAAIP,EAAO,OAAS,QAASQ,QAASR,EAAO,OAAS,QAA9D,SACE,eAACS,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,qBACA,cAACL,EAAA,EAAOM,OAAR,IACA,cAACN,EAAA,EAAOO,SAAR,CAAiBR,UAAU,sBAA3B,SACE,cAACS,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,MAAN,CACEC,KAAK,SACLC,GAAG,gBACHC,MAAM,cACNC,SAAU,kBAAMlB,GAASD,IACzBoB,QAASpB,aAQnB,cAACS,EAAA,EAAD,CAAWJ,UAAU,YAArB,SACE,cAACgB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,IAAN,CAAUjB,QAAQ,MAAMkB,IAAI,mIAC5B,eAACF,EAAA,EAAKG,KAAN,CAAWtB,UAAWL,EAAO,aAAe,GAA5C,UACE,cAACwB,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,KAAN,6GAIA,cAACC,EAAA,EAAD,CAAQtB,QAAQ,UAAhB,0CCvCDuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1e9e92f.chunk.js","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { Navbar, Container, Form, Row, Col, Card, Button } from 'react-bootstrap';\n\nfunction App() {\n\n  const getMode = () => {\n    return JSON.parse(localStorage.getItem('Mode')) || false\n  }\n\n  const [dark, setMode] = useState(getMode());\n\n  useEffect(() => {\n    localStorage.setItem('Mode', JSON.stringify(dark))\n  }, [dark])\n\n  \n\n  return (\n    <div className={dark ? \"App dark-mode\" : \"App\"}>\n      <Navbar bg={dark ? \"dark\" : \"light\"} variant={dark ? \"dark\" : \"light\"}>\n        <Container>\n          <Navbar.Brand href=\"#home\">M.Osama</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Form>\n              <Form.Check\n                type=\"switch\"\n                id=\"custom-switch\"\n                label=\"Change Mode\"\n                onChange={() => setMode(!dark)}\n                checked={dark}\n              />\n            </Form>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      <Container className=\"my-2 py-2\">\n        <Row>\n          <Col sm={12}>\n            <Card>\n              <Card.Img variant=\"top\" src=\"https://images.hindustantimes.com/auto/img/2021/09/13/600x338/apple_icar_youtube_1612505634970_1612505641070_1631525849072.jpg\" />\n              <Card.Body className={dark ? \" dark-mode\" : \"\"}>\n                <Card.Title>Card Title</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/slider.jsx","App.js","reportWebVitals.js","index.js"],"names":["AutoPlaySwipeableViews","autoPlay","SwipeableViews","images","label","imgPath","SwipeableTextMobileStepper","theme","useTheme","React","activeStep","setActiveStep","maxSteps","length","Box","sx","maxWidth","flexGrow","axis","direction","index","onChangeIndex","step","enableMouseEvents","map","Math","abs","component","height","display","overflow","width","src","alt","MobileStepper","steps","position","nextButton","Button","size","onClick","prevActiveStep","disabled","backButton","App","useState","JSON","parse","localStorage","getItem","dark","useEffect","setItem","stringify","alignment","setAlignment","className","AppBar","color","Toolbar","IconButton","edge","mr","Typography","variant","ToggleButtonGroup","value","exclusive","onChange","event","newAlignment","ToggleButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c15886a7.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst images = [\r\n    {\r\n        label: 'San Francisco – Oakland Bay Bridge, United States',\r\n        imgPath:\r\n            'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n    },\r\n    {\r\n        label: 'Bird',\r\n        imgPath:\r\n            'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n    },\r\n    {\r\n        label: 'Bali, Indonesia',\r\n        imgPath:\r\n            'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n    },\r\n    {\r\n        label: 'Goč, Serbia',\r\n        imgPath:\r\n            'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n    },\r\n];\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n    const theme = useTheme();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const maxSteps = images.length;\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: '100vw', flexGrow: 1 }}>\r\n\r\n            <AutoPlaySwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={activeStep}\r\n                onChangeIndex={handleStepChange}\r\n                enableMouseEvents\r\n            >\r\n                {images.map((step, index) => (\r\n                    <div key={step.label}>\r\n                        {Math.abs(activeStep - index) <= 2 ? (\r\n                            <Box\r\n                                component=\"img\"\r\n                                sx={{\r\n                                    height: 'auto',\r\n                                    display: 'block',\r\n                                    maxWidth: '100vw',\r\n                                    overflow: 'hidden',\r\n                                    width: '100%'\r\n                                }}\r\n                                src={step.imgPath}\r\n                                alt={step.label}\r\n                            />\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </AutoPlaySwipeableViews>\r\n            <MobileStepper\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                activeStep={activeStep}\r\n                nextButton={\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={handleNext}\r\n                        disabled={activeStep === maxSteps - 1}\r\n                    >\r\n                        Next\r\n                        {theme.direction === 'rtl' ? (\r\n                            <KeyboardArrowLeft />\r\n                        ) : (\r\n                            <KeyboardArrowRight />\r\n                        )}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? (\r\n                            <KeyboardArrowRight />\r\n                        ) : (\r\n                            <KeyboardArrowLeft />\r\n                        )}\r\n                        Back\r\n                    </Button>\r\n                }\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","import './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\n// import { Navbar, Container, Form, Row, Col, Card, Button } from 'react-bootstrap';\n// import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nimport Slider from \"./components/slider\"\n\n\nfunction App() {\n  const getMode = () => {\n    return JSON.parse(localStorage.getItem('Mode')) || false\n  }\n\n  const [dark, setMode] = useState(getMode());\n  useEffect(() => {\n    localStorage.setItem('Mode', JSON.stringify(dark))\n  }, [dark])\n\n\n  const [alignment, setAlignment] = React.useState('white');\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return (\n    <div className=\"App\">\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\" color=\"transparent\"  >\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              News\n            </Typography>\n\n            <ToggleButtonGroup\n              color=\"primary\"\n              value={alignment}\n              exclusive\n              onChange={handleChange}\n            >\n              <ToggleButton value=\"white\">White</ToggleButton>\n              <ToggleButton value=\"dark\">Dark</ToggleButton>\n\n            </ToggleButtonGroup>\n          </Toolbar>\n        </AppBar>\n      </Box>\n\n      <Slider />\n\n\n\n\n\n    </div>\n\n\n\n    // <div className={dark ? \"App dark-mode\" : \"App\"}>\n    //   <Navbar bg={dark ? \"dark\" : \"light\"} variant={dark ? \"dark\" : \"light\"}>\n    //     <Container>\n    //       <Navbar.Brand href=\"#home\">M.Osama</Navbar.Brand>\n    //       <Navbar.Toggle />\n    //       <Navbar.Collapse className=\"justify-content-end\">\n    //         <Form>\n    //           <Form.Check\n    //             type=\"switch\"\n    //             id=\"custom-switch\"\n    //             label=\"Change Mode\"\n    //             onChange={() => setMode(!dark)}\n    //             checked={dark}\n    //           />\n    //         </Form>\n    //       </Navbar.Collapse>\n    //     </Container>\n    //   </Navbar>\n\n\n    //   <Container className=\"my-2 py-2\">\n    //     <Row>\n    //       <Col sm={12}>\n    //         <Card>\n    //           <Card.Img variant=\"top\" src=\"https://images.hindustantimes.com/auto/img/2021/09/13/600x338/apple_icar_youtube_1612505634970_1612505641070_1631525849072.jpg\" />\n    //           <Card.Body className={dark ? \" dark-mode\" : \"\"}>\n    //             <Card.Title>Card Title</Card.Title>\n    //             <Card.Text>\n    //               Some quick example text to build on the card title and make up the bulk of\n    //               the card's content.\n    //             </Card.Text>\n    //             <Button variant=\"primary\">Go somewhere</Button>\n    //           </Card.Body>\n    //         </Card>\n    //       </Col>\n    //     </Row>\n    //   </Container>\n    // </div>\n\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}